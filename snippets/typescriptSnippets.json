{
    "Creates a new controller.": {
        "prefix": "zc",
        "body": [
            "import {Controller, Socket, BackError, BackErrorBag} from \"zation-server\";",
            "",
            "@Controller.Config({",
            "    access: 'all',",
            "    ${2}",
            "})",
            "export default class ${1:Name} extends Controller {",
            "",
            "    async initialize() {",
            "        ",
            "    }",
            "",
            "    async handle(socket: Socket, input: any) {",
            "        ${3}",
            "    }",
            "",
            "    async invalidInput(socket: Socket, rawInput: any) {",
            "        ",
            "    }",
            "",
            "}"
        ],
        "description": "Creates a new controller."
    },
    "Creates a new receiver.": {
        "prefix": "zr",
        "body": [
            "import {Receiver, Socket, BackError, BackErrorBag} from \"zation-server\";",
            "",
            "@Receiver.Config({",
            "    access: 'all',",
            "    ${2}",
            "})",
            "export default class ${1:Name} extends Receiver {",
            "",
            "    async initialize() {",
            "        ",
            "    }",
            "",
            "    async handle(socket: Socket, input: any) {",
            "        ${3}",
            "    }",
            "",
            "    async invalidInput(socket: Socket, rawInput: any) {",
            "        ",
            "    }",
            "",
            "}"
        ],
        "description": "Creates a new receiver."
    },
    "Creates a new databox.": {
        "prefix": "zdb",
        "body": [
            "import {Databox, FetchRequest, DbInConnection} from \"zation-server\";",
            "",
            "@Databox.Config({",
            "    access: 'all',",
            "    ${3}",
            "})",
            "export default class ${1:Name} extends Databox<${2:Content}> {",
            "",
            "    protected async fetch(request: FetchRequest, connection: DbInConnection) {",
            "        ${4}",
            "    }",
            "",
            "}"
        ],
        "description": "Creates a new databox."
    },
    "Creates a new static databox.": {
        "prefix": "zsdb",
        "body": [
            "import {StaticDatabox, FetchRequest, StaticDbInConnection} from \"zation-server\";",
            "",
            "@StaticDatabox.Config({",
            "    access: 'all',",
            "    ${3}",
            "})",
            "export default class ${1:Name} extends StaticDatabox<${2:Content}> {",
            "",
            "    protected async fetch(request: FetchRequest, connection: StaticDbInConnection) {",
            "        ${4}",
            "    }",
            "",
            "}"
        ],
        "description": "Creates a new static databox."
    },
    "Creates a new channel.": {
        "prefix": "zch",
        "body": [
            "import {Channel, Socket} from \"zation-server\";",
            "",
            "@Channel.Config({",
            "    access: 'all',",
            "    ${2}",
            "})",
            "export default class ${1:Name} extends Channel {",
            "",
            "    protected async onSubscription(member, socket: Socket) {",
            "        ${3}",
            "    }",
            "",
            "}"
        ],
        "description": "Creates a new channel."
    },
    "Creates a new static channel.": {
        "prefix": "zsch",
        "body": [
            "import {StaticChannel, Socket} from \"zation-server\";",
            "",
            "@StaticChannel.Config({",
            "    access: 'all',",
            "    ${2}",
            "})",
            "export default class ${1:Name} extends StaticChannel {",
            "",
            "    protected async onSubscription(socket: Socket) {",
            "        ${3}",
            "    }",
            "",
            "}"
        ],
        "description": "Creates a new static channel."
    },
    "Creates a new injection.": {
        "prefix": "zi",
        "body": [
            "@Inject(${3:inject})",
            "private readonly ${1:propName}: ${2:propType};"
        ],
        "description": "Creates a new injection."
    },
    "Creates a new object model.": {
        "prefix": "zom",
        "body": [
            "import {ObjectModel, Constructor, ModelProp} from \"zation-server\";",
            "@ObjectModel()",
            "class ${1:name} {",
            "",
            "    @Constructor()",
            "    protected async init() {",
            "        ",
            "    }",
            "",
            "    ${2:firstPropName} = ModelProp({",
            "        type: \"${3:firstPropModelType}\",",
            "    });",
            "",
            "}",
            ""
        ],
        "description": "Creates a new object model."
    },
    "Creates a new model property.": {
        "prefix": "zmp",
        "body": [
            "${1:propName} = ModelProp({",
            "    type: \"${2:propModelType}\",",
            "});"
        ],
        "description": "Creates a new model property."
    }
}