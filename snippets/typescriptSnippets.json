{
    "Creates a new Controller.": {
        "prefix": "zc",
        "body": [
            "import {Controller, Socket, BackError, BackErrorBag} from 'zation-server';",
            "",
            "@Controller.Config({",
            "    access: 'all',",
            "    ${2}",
            "})",
            "export default class ${1:Name}Controller extends Controller {",
            "",
            "    async initialize() {",
            "        ",
            "    }",
            "",
            "    async handle(socket: Socket, input: any) {",
            "        ${3}",
            "    }",
            "",
            "    async invalidInput(socket: Socket, rawInput: any) {",
            "        ",
            "    }",
            "",
            "}"
        ],
        "description": "Creates a new Controller."
    },
    "Creates a new Receiver.": {
        "prefix": "zr",
        "body": [
            "import {Receiver, Socket, BackError, BackErrorBag} from 'zation-server';",
            "",
            "@Receiver.Config({",
            "    access: 'all',",
            "    ${2}",
            "})",
            "export default class ${1:Name}Receiver extends Receiver {",
            "",
            "    async initialize() {",
            "        ",
            "    }",
            "",
            "    async handle(socket: Socket, input: any) {",
            "        ${3}",
            "    }",
            "",
            "    async invalidInput(socket: Socket, rawInput: any) {",
            "        ",
            "    }",
            "",
            "}"
        ],
        "description": "Creates a new Receiver."
    },
    "Creates a new Databox.": {
        "prefix": "zdb",
        "body": [
            "import {Databox, FetchRequest, DbInConnection} from 'zation-server';",
            "",
            "@Databox.Config({",
            "    access: 'all',",
            "    ${2}",
            "})",
            "export default class ${1:Name}Databox extends Databox {",
            "",
            "    async fetch(request: FetchRequest, connection: DbInConnection) {",
            "        ${3}",
            "    }",
            "",
            "}"
        ],
        "description": "Creates a new Databox."
    },
    "Creates a new DataboxFamily.": {
        "prefix": "zdbf",
        "body": [
            "import {DataboxFamily, FetchRequest, DbFamilyInConnection} from 'zation-server';",
            "",
            "@DataboxFamily.Config({",
            "    access: 'all',",
            "    ${2}",
            "})",
            "export default class ${1:Name}Databox extends DataboxFamily {",
            "",
            "    async fetch(request: FetchRequest, connection: DbFamilyInConnection) {",
            "        ${3}",
            "    }",
            "",
            "}"
        ],
        "description": "Creates a new DataboxFamily."
    },
    "Creates a new Channel.": {
        "prefix": "zch",
        "body": [
            "import {Channel, Socket} from 'zation-server';",
            "",
            "@Channel.Config({",
            "    access: 'all',",
            "    ${2}",
            "})",
            "export default class ${1:Name}Channel extends Channel {",
            "",
            "    async onSubscription(socket: Socket) {",
            "        ${3}",
            "    }",
            "",
            "}"
        ],
        "description": "Creates a new Channel."
    },
    "Creates a new ChannelFamily.": {
        "prefix": "zchf",
        "body": [
            "import {ChannelFamily, Socket} from 'zation-server';",
            "",
            "@ChannelFamily.Config({",
            "    access: 'all',",
            "    ${2}",
            "})",
            "export default class ${1:Name}Channel extends ChannelFamily {",
            "",
            "    async onSubscription(member, socket: Socket) {",
            "        ${3}",
            "    }",
            "",
            "}"
        ],
        "description": "Creates a new ChannelFamily."
    },
    "Creates a new injection.": {
        "prefix": "zi",
        "body": [
            "@Inject(${3:inject})",
            "private readonly ${1:propName}: ${2:propType};"
        ],
        "description": "Creates a new injection."
    },
    "Creates a new ObjectModel.": {
        "prefix": "zom",
        "body": [
            "import {ObjectModel, Constructor, Model} from 'zation-server';",
            "@ObjectModel()",
            "class ${1:name} {",
            "",
            "    @Constructor()",
            "    async init() {",
            "        ",
            "    }",
            "",
            "    @Model(${4:firstPropModel})",
            "    ${2:firstPropName}: ${3:firstPropType};",
            "",
            "}",
            ""
        ],
        "description": "Creates a new ObjectModel."
    },
    "Creates a new ModelProperty.": {
        "prefix": "zmp",
        "body": [
            "@Model(${3:propModel})",
            "${1:propName}: ${2:propType};"
        ],
        "description": "Creates a new ModelProperty."
    }
}