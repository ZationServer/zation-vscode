{
    "Creates a new Controller.": {
        "prefix": "zc",
        "body": [
            "import {Register, Controller, ControllerConfig, Result, BackError, BackErrorBag, Bag, RequestBag} from 'zation-server';",
            "",
            "@Register()",
            "export default class ${1:name} extends Controller {",
            "",
            "    static readonly config: ControllerConfig = {",
            "        ${2}",
            "    };",
            "",
            "    async initialize(bag: Bag) {",
            "",
            "    }",
            "",
            "    async handle(bag: RequestBag,{}) {",
            "",
            "    }",
            "",
            "    async finallyHandle(bag: RequestBag, input: any) {",
            "",
            "    }",
            "",
            "    async invalidInput(bag: RequestBag, input: any, backErrorBag: BackErrorBag) {",
            "",
            "    }",
            "",
            "}"
        ],
        "description": "Creates a new Controller."
    },
    "Creates a new Databox.": {
        "prefix": "zdb",
        "body": [
            "import {Bag, DataboxConfig, Databox, Register, ZSocket} from \"zation-server\";",
            "",
            "@Register()",
            "export default class ${1:name} extends Databox {",
            "",
            "    static readonly config: DataboxConfig = {",
            "        ${2}",
            "    };",
            "",
            "    async fetch(counter: number, session: any, input: any, initData: any, socket: ZSocket) {",
            "",
            "    }",
            "",
            "}"
        ],
        "description": "Creates a new Databox."
    },
    "Creates a new DataboxFamily.": {
        "prefix": "zdbf",
        "body": [
            "import {Bag, DataboxConfig, DataboxFamily, Register} from \"zation-server\";",
            "",
            "@Register()",
            "export default class ${1:name} extends DataboxFamily {",
            "",
            "    static readonly config: DataboxConfig = {",
            "        ${2}",
            "    };",
            "",
            "    async fetch(id: string, counter: number, session: any, input: any, initData: any, socket: ZSocket) {",
            "",
            "    }",
            "",
            "    async isIdValid(id: string, bag: Bag) {",
            "",
            "    }",
            "",
            "}"
        ],
        "description": "Creates a new DataboxFamily."
    },
    "Creates a new ObjectModel.": {
        "prefix": "zom",
        "body": [
            "import {ObjectModel,Constructor,Model} from 'zation-server';",
            "@ObjectModel()",
            "class ${1:name} {",
            "",
            "    @Constructor()",
            "    async init() {",
            "        ",
            "    }",
            "",
            "    @Model(${4:firstPropModel})",
            "    ${2:firstPropName} : ${3:firstPropType};",
            "",
            "}",
            ""
        ],
        "description": "Creates a new ObjectModel."
    },
    "Creates a new ParamInput.": {
        "prefix": "zpi",
        "body": [
            "import {ParamInput,Model} from 'zation-server';",
            "@ParamInput()",
            "class ${1:name} {",
            "",
            "    @Model({${4:firstPropModel}})",
            "    ${2:firstPropName} : ${3:firstPropType};",
            "",
            "}",
            ""
        ],
        "description": "Creates a new ParamInput."
    },
    "Creates a new ModelProperty.": {
        "prefix": "zmp",
        "body": [
            "@Model(${3:propModel})",
            "${1:propName} : ${2:propType};"
        ],
        "description": "Creates a new ModelProperty."
    },
    "Creates a new ObjectModel Constructor.": {
        "prefix": "zomc",
        "body": [
            "@Constructor()",
            "async ${1:name}() {",
            "    ${2}",
            "}"
        ],
        "description": "Creates a new ObjectModel Constructor."
    }
}